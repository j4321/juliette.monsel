#! /usr/bin/python3
# -*- coding: utf-8 -*-
"""
Generate the files publications-list.rst (list of publications) and  
conf-list.rst (list of conferences) from the bibtex files publications.bib
and conf.bib.
"""
import bibtexparser


def generate_publi():
    """Generate file publications-list.rst"""
    with open('publications.bib') as bibtex_file:
        bib_database = bibtexparser.load(bibtex_file)

    # ENTRYTYPE: article = published article, misc = preprint, book = book
    entries = {'article': [], 'misc': [], 'book': []}

    for entry in bib_database.entries:
        entries[entry['ENTRYTYPE']].append(entry)

    # books

    if entries['book']:
        books = """
Books
-----
.. container:: publi

    .. bibliography:: publications.bib
        :list: bullet
        :filter: (not cited) and (type == "book")
        :style: mystyle
"""
    else:
        books = ""

    # preprints

    if entries['misc']:
        preprints = """
Preprints
---------
.. container:: publi

    .. bibliography:: publications.bib
        :list: bullet
        :filter: (not cited) and (type == "misc")
        :style: mystyle
    
Articles
--------
"""
    else:
        preprints = """
Articles
--------
    """

    # published articles
    years = set()
    for entry in entries['article']:
        year = entry.get('year', '')
        if year:
            years.add(int(year))

    years = sorted(years, reverse=True)
    publi = """
.. rubric:: {year}

.. container:: publi

    .. bibliography:: publications.bib
        :list: bullet
        :filter: (not cited) and (type == "article") and (year == "{year}")
        :style: mystyle
"""

    with open("publications-list.rst", 'w') as file:
        file.write(".. ~ This file is generated by the script rst_from_bib.py during the compilation, any manual edit will be overriden.\n\n")
        file.write(books)
        file.write(preprints)
        file.write('\n'.join([publi.format(year=year) for year in years]))


def generate_conf():
    """Generate file conf-list.rst"""
    with open('conf.bib') as bibtex_file:
        bib_database = bibtexparser.load(bibtex_file)

    dates = {'poster': set(), 
             'invited': set(),
             'contributed': set()}
             
    for entry in bib_database.entries:
        year = entry.get('year', '')
        kind = entry.get('keywords', '')
        dates[kind].add(year) 

    headers = {
        'invited': "\nSeminars and invited talks" \
                   "\n--------------------------",
        'contributed': "\nContributed talks" \
                       "\n-----------------",
        'poster': "\nPosters" \
                  "\n-------"
    }

    publi = """
.. rubric:: {year}

.. container:: publi

    .. bibliography:: conf.bib
        :list: bullet
        :filter: (not cited) and (year == "{year}") and (keywords == "{kind}")
        :style: mystyle
"""
    with open("conf-list.rst", 'w') as file:
        file.write(".. ~ This file is generated by the script rst_from_bib.py during the compilation, any manual edit will be overriden.\n\n")
        for kind in ['invited', 'contributed', 'poster']:
            years = sorted(dates[kind], reverse=True)
            file.write(headers[kind])
            file.write('\n'.join([publi.format(year=year, kind=kind) for year in years]))


if __name__ == '__main__':
    generate_publi()
    generate_conf()
